loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2

loadrt hm2_spi spidev_path=/dev/spidev0.0
loadrt tmc26x_bspi bspi_chans=hm2_alch_au.0.bspi.0

loadrt offset names=off.j1.pos,off.j1.vel

loadusr -W sx1509b

# configure motor currents
setp tmc26x-bspi.0.maxcurrent.0.out 750
setp tmc26x-bspi.0.maxcurrent.1.out 750
setp tmc26x-bspi.0.maxcurrent.2.out 1200
setp tmc26x-bspi.0.maxcurrent.3.out 570

# configure outputs/inputs on gpio expander
setp sx1509b.0.config 0x9ff0 

# invert onboard pwmgen's
setp [HOSTMOT2](BOARD).0.pwmgen.00.out0.invert_output TRUE
setp [HOSTMOT2](BOARD).0.pwmgen.01.out0.invert_output TRUE
setp [HOSTMOT2](BOARD).0.pwmgen.02.out0.invert_output TRUE
setp [HOSTMOT2](BOARD).0.pwmgen.03.out0.invert_output TRUE
setp [HOSTMOT2](BOARD).0.pwmgen.04.out0.invert_output TRUE

setp [HOSTMOT2](BOARD).0.pwmgen.pwm_frequency 200
setp [HOSTMOT2](BOARD).0.pwmgen.pdm_frequency 5000
setp [HOSTMOT2](BOARD).0.watchdog.timeout_ns 500000000

setp scarakins.D1 285 
setp scarakins.D2 100
setp scarakins.D3 20
setp scarakins.D4 100
setp scarakins.D5 0
setp scarakins.D6 0

addf [HOSTMOT2](BOARD).0.read     servo-thread
addf [HOSTMOT2](BOARD).0.write    servo-thread
addf motion-command-handler       servo-thread
addf motion-controller            servo-thread
addf off.j1.pos.update-output     servo-thread
addf off.j1.pos.update-feedback   servo-thread
addf off.j1.vel.update-output     servo-thread
addf off.j1.vel.update-feedback   servo-thread

# --- HOMING ---
net home-j0 <= sx1509b.0.gpio-00
net home-j1 <= sx1509b.0.gpio-03
net home-j2 <= sx1509b.0.gpio-02
net home-j3 <= sx1509b.0.gpio-01

# --- MOTOR EN ---
setp [HOSTMOT2](BOARD).0.gpio.022.is_output TRUE
setp [HOSTMOT2](BOARD).0.gpio.022.invert_output TRUE
net machine-is-enabled => [HOSTMOT2](BOARD).0.gpio.022.out

# Step Gen signals/setup

setp   [HOSTMOT2](BOARD).0.stepgen.00.dirsetup        [JOINT_0]DIRSETUP
setp   [HOSTMOT2](BOARD).0.stepgen.00.dirhold         [JOINT_0]DIRHOLD
setp   [HOSTMOT2](BOARD).0.stepgen.00.steplen         [JOINT_0]STEPLEN
setp   [HOSTMOT2](BOARD).0.stepgen.00.stepspace       [JOINT_0]STEPSPACE
setp   [HOSTMOT2](BOARD).0.stepgen.00.position-scale  [JOINT_0]STEP_SCALE
setp   [HOSTMOT2](BOARD).0.stepgen.00.step_type       0
setp   [HOSTMOT2](BOARD).0.stepgen.00.control-type    0
setp   [HOSTMOT2](BOARD).0.stepgen.00.maxaccel        [JOINT_0]STEPGEN_MAXACCEL
setp   [HOSTMOT2](BOARD).0.stepgen.00.maxvel          [JOINT_0]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net j0-pos-cmd    <= joint.0.motor-pos-cmd
net j0-vel-cmd    <= joint.0.vel-cmd
net j0-pos-cmd    => [HOSTMOT2](BOARD).0.stepgen.00.position-cmd
net j0-pos-fb     <= [HOSTMOT2](BOARD).0.stepgen.00.position-fb
net j0-pos-fb     => joint.0.motor-pos-fb
net j0-enable     <= joint.0.amp-enable-out
net j0-enable     => [HOSTMOT2](BOARD).0.stepgen.00.enable

# ---setup home / limit switch signals---

net home-j0          =>  joint.0.home-sw-in
net j0-neg-limit     =>  joint.0.neg-lim-sw-in
net j0-pos-limit     =>  joint.0.pos-lim-sw-in


# Step Gen signals/setup

setp   [HOSTMOT2](BOARD).0.stepgen.01.dirsetup        [JOINT_1]DIRSETUP
setp   [HOSTMOT2](BOARD).0.stepgen.01.dirhold         [JOINT_1]DIRHOLD
setp   [HOSTMOT2](BOARD).0.stepgen.01.steplen         [JOINT_1]STEPLEN
setp   [HOSTMOT2](BOARD).0.stepgen.01.stepspace       [JOINT_1]STEPSPACE
setp   [HOSTMOT2](BOARD).0.stepgen.01.position-scale  [JOINT_1]STEP_SCALE
setp   [HOSTMOT2](BOARD).0.stepgen.01.step_type       0
setp   [HOSTMOT2](BOARD).0.stepgen.01.control-type    0
setp   [HOSTMOT2](BOARD).0.stepgen.01.maxaccel        [JOINT_1]STEPGEN_MAXACCEL
setp   [HOSTMOT2](BOARD).0.stepgen.01.maxvel          [JOINT_1]STEPGEN_MAXVEL

# ---closedloop stepper signals---
net j0-pos-cmd    => off.j1.pos.offset
net j1b-pos-cmd   <= joint.1.motor-pos-cmd
net j1b-pos-cmd   => off.j1.pos.in
net j1-pos-cmd    <= off.j1.pos.out

net j0-vel-cmd    => off.j1.vel.offset
net j1b-vel-cmd   <= joint.1.vel-cmd
net j1b-vel-cmd   => off.j1.vel.in
net j1-vel-cmd    <= off.j1.vel.out

net j1-pos-cmd    => [HOSTMOT2](BOARD).0.stepgen.01.position-cmd
net j1b-pos-fb    <= [HOSTMOT2](BOARD).0.stepgen.01.position-fb
net j1b-pos-fb    => off.j1.pos.fb-in
net j1-pos-fb     <= off.j1.pos.fb-out
net j1-pos-fb     => joint.1.motor-pos-fb
net j1-enable     <= joint.1.amp-enable-out
net j1-enable     => [HOSTMOT2](BOARD).0.stepgen.01.enable

# ---setup home / limit switch signals---

net home-j1     =>  joint.1.home-sw-in
net j1-neg-limit     =>  joint.1.neg-lim-sw-in
net j1-pos-limit     =>  joint.1.pos-lim-sw-in

# Step Gen signals/setup

setp   [HOSTMOT2](BOARD).0.stepgen.02.dirsetup        [JOINT_2]DIRSETUP
setp   [HOSTMOT2](BOARD).0.stepgen.02.dirhold         [JOINT_2]DIRHOLD
setp   [HOSTMOT2](BOARD).0.stepgen.02.steplen         [JOINT_2]STEPLEN
setp   [HOSTMOT2](BOARD).0.stepgen.02.stepspace       [JOINT_2]STEPSPACE
setp   [HOSTMOT2](BOARD).0.stepgen.02.position-scale  [JOINT_2]STEP_SCALE
setp   [HOSTMOT2](BOARD).0.stepgen.02.step_type       0
setp   [HOSTMOT2](BOARD).0.stepgen.02.control-type    0
setp   [HOSTMOT2](BOARD).0.stepgen.02.maxaccel        [JOINT_2]STEPGEN_MAXACCEL
setp   [HOSTMOT2](BOARD).0.stepgen.02.maxvel          [JOINT_2]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net j2-pos-cmd    <= joint.2.motor-pos-cmd
net j2-vel-cmd    <= joint.2.vel-cmd
net j2-pos-cmd    => [HOSTMOT2](BOARD).0.stepgen.02.position-cmd
net j2-pos-fb     <= [HOSTMOT2](BOARD).0.stepgen.02.position-fb
net j2-pos-fb     => joint.2.motor-pos-fb
net j2-enable     <= joint.2.amp-enable-out
net j2-enable     => [HOSTMOT2](BOARD).0.stepgen.02.enable

# ---setup home / limit switch signals---

net home-j2     =>  joint.2.home-sw-in
net j2-neg-limit     =>  joint.2.neg-lim-sw-in
net j2-pos-limit     =>  joint.2.pos-lim-sw-in

# Step Gen signals/setup

setp   [HOSTMOT2](BOARD).0.stepgen.03.dirsetup        [JOINT_3]DIRSETUP
setp   [HOSTMOT2](BOARD).0.stepgen.03.dirhold         [JOINT_3]DIRHOLD
setp   [HOSTMOT2](BOARD).0.stepgen.03.steplen         [JOINT_3]STEPLEN
setp   [HOSTMOT2](BOARD).0.stepgen.03.stepspace       [JOINT_3]STEPSPACE
setp   [HOSTMOT2](BOARD).0.stepgen.03.position-scale  [JOINT_3]STEP_SCALE
setp   [HOSTMOT2](BOARD).0.stepgen.03.step_type       0
setp   [HOSTMOT2](BOARD).0.stepgen.03.control-type    0
setp   [HOSTMOT2](BOARD).0.stepgen.03.maxaccel        [JOINT_3]STEPGEN_MAXACCEL
setp   [HOSTMOT2](BOARD).0.stepgen.03.maxvel          [JOINT_3]STEPGEN_MAXVEL

# ---closedloop stepper signals---

net j3-pos-cmd    <= joint.3.motor-pos-cmd
net j3-vel-cmd    <= joint.3.vel-cmd
net j3-pos-cmd    => [HOSTMOT2](BOARD).0.stepgen.03.position-cmd
net j3-pos-fb     <= [HOSTMOT2](BOARD).0.stepgen.03.position-fb
net j3-pos-fb     => joint.3.motor-pos-fb
net j3-enable     <= joint.3.amp-enable-out
net j3-enable     => [HOSTMOT2](BOARD).0.stepgen.03.enable

#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net joint-select-a        halui.axis.x.select
net jog-x-pos             halui.axis.x.plus
net jog-x-neg             halui.axis.x.minus
net jog-x-analog          halui.axis.x.analog
net joint-select-b        halui.axis.y.select
net jog-y-pos             halui.axis.y.plus
net jog-y-neg             halui.axis.y.minus
net jog-y-analog          halui.axis.y.analog
net joint-select-c        halui.axis.z.select
net jog-z-pos             halui.axis.z.plus
net jog-z-neg             halui.axis.z.minus
net jog-z-analog          halui.axis.z.analog
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed 
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-out     =>  iocontrol.0.emc-enable-in

# tool changer loopbacks
net tool-prep-loop iocontrol.0.tool-prepare => iocontrol.0.tool-prepared
net tool-change-loop iocontrol.0.tool-change => iocontrol.0.tool-changed
